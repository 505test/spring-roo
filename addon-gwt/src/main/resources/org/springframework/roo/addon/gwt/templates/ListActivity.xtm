package {{=packageName}};

import com.google.gwt.app.place.AbstractRecordListActivity;
import com.google.gwt.app.place.PlaceController;
import com.google.gwt.app.place.RecordListView;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.requestfactory.shared.RecordListRequest;
import com.google.gwt.view.client.Range;
{{#imports}}import {{=import}};
{{/imports}}
/**
 * Activity that requests and displays all {${entity.record}}
 * records.
 */
public class {{=className}} extends AbstractRecordListActivity<{{=record}}> {

	private static RecordListView<{{=record}}> defaultView;

	private static RecordListView<{{=record}}> getDefaultView() {
		if (defaultView == null) {
			defaultView = new {{=listView}}();
		}
		return defaultView;
	}

	private final {{=requestFactory}} requests;

	/**
	 * Creates an activity that uses the default singleton view instance.
 	 */
	public {{=className}}({{=requestFactory}} requests, PlaceController placeController) {
		this(requests, getDefaultView(), placeController);
	}

	/**
   * Creates an activity that uses the given view instance.
	 */
	public {{=className}}({{=requestFactory}} requests, RecordListView<{{=record}}> view, PlaceController placeController) {
    	super(requests, placeController, view, {{=record}}.class);
    	this.requests = requests;
	}

	public void start(Display display, EventBus eventBus) {
    	// TODO (rjrjr) this can move to super class when event bus gets smarter
		eventBus.addHandler({{=recordChanged}}.TYPE, new {{=changedHandler}}() {
			public void on{{=name}}Changed({{=recordChanged}} event) {
				update(event.getWriteOperation(), event.getRecord());
			}
		});
		
		super.start(display, eventBus);
	}

	protected RecordListRequest<{{=record}}> createRangeRequest(Range range) {
		return requests.{{=nameUncapitalized}}Request().find{{=name}}Entries(range.getStart(), range.getLength());
	}

	protected void fireCountRequest(Receiver<Long> callback) {
		requests.{{=nameUncapitalized}}Request().count{{=pluralName}}().fire(callback);
	}
}
