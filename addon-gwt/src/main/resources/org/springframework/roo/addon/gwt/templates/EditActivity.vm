#parse ("common.vm")
package ${packageName};

import com.google.gwt.app.place.AbstractRecordEditActivity;
import com.google.gwt.app.place.PlaceController;
import com.google.gwt.app.place.RecordEditView;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.requestfactory.shared.RequestObject;
import com.google.gwt.valuestore.shared.Value;
#declareImports()

/**
 * An activity that requests all info on an ${entity.name}, allows the user to edit
 * it, and persists the results.
 */
public class $className extends AbstractRecordEditActivity<${entity.record}> {
	private static RecordEditView<${entity.record}> defaultView;

	private static RecordEditView<${entity.record}> getDefaultView() {
		if (defaultView == null) {
			defaultView = new ${entity.editView}();
		}
		return defaultView;
	}

	private final ApplicationRequestFactory requests;

	/**
	 * Creates an activity that uses the default singleton view instance.
	 */
	public $className(${entity.record} proxy, ApplicationRequestFactory requests, PlaceController placeController, boolean creating) {
		this(getDefaultView(), proxy, requests, placeController, creating);
	}

	/**
	 * Creates an activity that uses its own view instance.
	 */
	public $className(RecordEditView<${entity.record}> view, ${entity.record} proxy, ApplicationRequestFactory requests, PlaceController placeController, boolean creating) {
		super(view, proxy, ${entity.record}.class, creating, requests, placeController);
		this.requests = requests;
	}

  @Override
	protected void fireFindRequest(Value<Long> id, Receiver<${entity.record}> callback) {
		requests.${entity.nameUncapitalized}Request().find${entity.name}(id).fire(callback);
	}

	protected RequestObject<Void> getPersistRequest(${entity.record} record) {
	    return requests.${entity.nameUncapitalized}Request().persist(record);
	}
}
