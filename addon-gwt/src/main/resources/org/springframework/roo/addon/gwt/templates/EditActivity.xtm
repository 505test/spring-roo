package {{=packageName}};

import com.google.gwt.app.place.AbstractRecordEditActivity;
import com.google.gwt.app.place.PlaceController;
import com.google.gwt.app.place.RecordEditView;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.requestfactory.shared.RequestObject;
import com.google.gwt.valuestore.shared.Value;
{{#imports}}import {{=import}};
{{/imports}}
/**
 * An activity that requests all info on an {{=name}}, allows the user to edit
 * it, and persists the results.
 */
public class {{=className}} extends AbstractRecordEditActivity<{{=record}}> {
	private static RecordEditView<{{=record}}> defaultView;

	private static RecordEditView<{{=record}}> getDefaultView() {
		if (defaultView == null) {
			defaultView = new {{=editView}}();
		}
		return defaultView;
	}

	private final ApplicationRequestFactory requests;

	/**
	 * Creates an activity that uses the default singleton view instance.
	 */
	public {{=className}}({{=record}} proxy, ApplicationRequestFactory requests, PlaceController placeController, boolean creating) {
		this(getDefaultView(), proxy, requests, placeController, creating);
	}

	/**
	 * Creates an activity that uses its own view instance.
	 */
	public {{=className}}(RecordEditView<{{=record}}> view, {{=record}} proxy, ApplicationRequestFactory requests, PlaceController placeController, boolean creating) {
		super(view, proxy, {{=record}}.class, creating, requests, placeController);
		this.requests = requests;
	}

	@Override
	protected void fireFindRequest(Value<Long> id, Receiver<{{=record}}> callback) {
		requests.{{=nameUncapitalized}}Request().find{{=name}}(id).fire(callback);
	}

	protected RequestObject<Void> getPersistRequest({{=record}} record) {
	    return requests.{{=nameUncapitalized}}Request().persist(record);
	}
}
