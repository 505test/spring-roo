topics=The following hints are available to help you use Roo:\r\r general, start, jpa, entities, fields, relationships, \r controllers, finders, eclipse, logging\r\rJust type 'hint topic_name' (without quotes) to view a specific hint.

general=At this stage of the project, you have a few options:\r\r  * List all hint topics via 'hint topics'\r  * Create more fields with 'hint fields'\r  * Create more entities with 'hint entities'\r  * Create a web controller with 'hint controllers'\r  * Create dynamic finders with 'hint finders'\r  * Setup your logging levels via 'hint logging'\r  * Run tests via Maven (type 'exit' and then 'mvn test')\r  * Build a deployment artifact (type 'exit' then 'mvn package')\r  * Learn about Eclipse integration by typing 'hint eclipse'\r  * Discover all Roo commands by typing 'help'

start=Welcome to Roo! We hope you enjoy your stay!\n\nBefore you can use many features of Roo, you need to start a new project.\r\rTo do this, type 'create project' (without the quotes) and then hit TAB.\r\rEnter a -topLevelPackage like 'com.mycompany.projectname' (no quotes).\rWhen you've finished completing your -topLevelPackage, press ENTER.\rYour new project will then be created in the current working directory.\r\rNote that Roo frequently allows the use of TAB, so press TAB regularly.\rOnce your project is created, type 'hint' and ENTER for the next suggestion.\rYou're also welcome to visit http://forum.springframework.org for Roo help.
jpa=Roo requires the installation of a JPA provider and associated database.\r\rType 'install jpa' and then hit TAB three times.\rWe suggest you type 'H' then TAB to complete "HIBERNATE".\rAfter the -provider, press TAB twice for database choices.\rFor testing purposes, type (or TAB) HYPERSONIC_IN_MEMORY.\rIf you press TAB again, you'll see there are no more options.\rAs such, you're ready to press ENTER to execute the command.\r\rOnce JPA is installed, type 'hint' and ENTER for the next suggestion.
entities=You can create entities either via Roo or your IDE.\nUsing the Roo shell is fast and easy, especially thanks to the TAB completion.\r\rStart by typing 'new p' and then hitting TAB twice.\rEnter the -name in the form '~.domain.MyEntityClassName'\rIn Roo, '~' means the -topLevelPackage you specified via 'create project'.\r\rAfer specify a -name argument, press SPACE then TAB. Note nothing appears.\rBecause nothing appears, it means you've entered all mandatory arguments.\rHowever, optional arguments do exist for this command (and most others in Roo).\rTo see the optional arguments, type '-' and then hit TAB. Mostly you won't\nneed any optional arguments, but let's select the -testAutomatically option\nand hit ENTER. You can always use this approach to view optional arguments.\r\rAfter creating an entity, use 'hint' for the next suggestion.
fields=You can add fields to your entities using either Roo or your IDE.\n\nTo add a new field, type 'add field' and then hit TAB. Be sure to select\nyour entity and provide a legal Java field name. Use TAB to find an entity\nname, and '~' to refer to the top level package. Also remember to use TAB\nto access each mandatory argument for the command.\n\nAfer completing the mandatory arguments, press SPACE, type '-' and then TAB.\nThe optional arguments shown reflect official JSR 303 Validation constraints.\nFeel free to use an optional argument, or delete '-' and hit ENTER.\n\nIf creating multiple fields, use the UP arrow to access command history.\n\nAfter adding your fields, type 'hint' for the next suggestion.\nTo learn about setting up many-to-one fields, type 'hint relationships'.
relationships=You create persistent relationships via 'add field set' and 'add field reference'.\n\nFor example, consider the typical Order <-> LineItem case:\n\n   ENTITY: Order            ENTITY: LineItem\n   Set<LineItem> items      Order order\n\nTo setup this relationship in Roo, you would use:\n\nadd field set jpa -fieldName items -class Order -element LineItem -mappedBy order\nadd field reference jpa -fieldName order -class LineItem -type Order -notNull\n\nLearn about fields addition using 'hint fields'.
controllers=Creating RESTful Spring MVC web controllers is quick and easy using Roo.\nControllers can be made that automatically expose an entity. Alternately, we\ncan create a stub, empty controller for you to finish off.\n\nFor the former, type 'new controller auto' and hit TAB three times.\nThe -name is the controller name; it need not reflect an entity name.\nWe suggest putting controllers under a '~.web' package to improve maintenance.\nYou can also specify the -formBackingObject the controller should expose.\n\nAfter creating a controller, use 'hint' for further suggestions.
finders=Roo can automatically create complex, type-safe finder methods.\n\nBe sure to add fields to your entity before creating finders.\nLearn how to add fields by typing 'hint fields'.\n\nTo view available finders, type 'list finders for' then TAB.\nNext select your entity class and hit ENTER. Names are then displayed.\nYou can see even more finder combinations by using -depth 2 or higher.\n\nTo add a finder, type 'install finder' and hit TAB twice.\nSpecify a -finderName from the earlier displayed output of 'list finders for'.\n\nFor more hints, type 'hint' and hit ENTER.
eclipse=It's easy to use your project in Eclipse or SpringSource Tool Suite (STS).\r\rTo set this up, you'll need to use the command prompt and then Eclipse itself:\r\r  1. Start by typing 'exit', to leave the Roo shell\r  2. Type 'mvn eclipse:clean eclipse:eclipse' to create Eclipse project files\r  3. Load Eclipse, then File > Import > Existing Projects Into Workspace\r  4. Ensure AJDT 1.6.5 or above is installed in Eclipse\r  5. Enable Window > Preferences > General > Workspace > Refresh Automatically\r  6. Finally, restart Roo (type 'roo' at the OS prompt) and enter 'hint'\r\rFor the best Eclipse experience, we recommend SpringSource Tool Suite (STS):\r\r  * Graphical editing of Roo commands\r  * No need to use the Roo shell\r  * Immediate importing of Roo projects\r  * Full Spring projects integration\r  * Many other productivity-increasing features\r\rDownload STS from http://springsource.com (it's free!).
logging=You can easily configure logging levels in your project.\r\rRoo will update the log4j.properties file to control your logging.\r\rType 'configure logging' then hit TAB twice. We suggest 'DEBUG' level.\rYou may wish to specify the optional -package argument (defaults to 'ALL').\r\rRemember to type 'hint' for further hints and suggestions.
